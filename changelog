MSAL Wiki : https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki

Version 1.1.0
----------------------------
- Expose id_token (raw) via IAccount/ITenantProfile from AuthenticationResult (#850)

Version 1.0.1
----------------------------
- Fix issue  #785, #786, #805, #806, #807, #816, #828, #855, #859
- Fixed multiple cloud support in MSAL with Broker.
- Added support for client capabilities to config.
- Added Server Side Telemetry to MSAL.
- Added authority to account object.
- Added support to silently acquire token for a another tenant for an already authorized user for different tenant.
- Added Broker BrowserSupport for COBO.
- Enabled MSAL-Broker communication via AccountManager.

Version 1.0.0-hf1
----------------------------
- Logging fixes in common.

Version 1.0.0
----------------------------
- MSAL Android is now generally available with MSAL 1.0
- Supported Authorities (Microsoft identity platform and Azure Active Directory B2C)
- Microsoft authentication broker support
- Supports enterprise scenarios including:
    * Device Registration
    * Device Management
    * Intune App Protection
    * Device Single Sign On
- Introduction of Single and Multi Account Public Client Applications
- IAccount and access to claims
- Support for synchronous methods from worker threads
- Improved configuration and control of your PublicClientApplication using configuration file
- AndroidX Compatible
- Common version: 1.0.7


Version 0.3.1-alpha
----------------------------
- Picks up common@0.0.10-alpha
- Adds additional validation to PublicClientApplicationConfiguration
- Adds support for non-tfp B2C authority URIs when declared via configuration
- Improved logging around network requests
- getAccounts() is now asynchronous
- Improved tooltips via nullability annotations
- Introduced 10 minute request timeout to unlock threading resources if a user is inactive
- Improved caching of IdTokens
    * Support for ver: 1 IdTokens added, supports B2C & ADAL backwards compatibility
- Improved argument validation
    * Fixed an issue where a null callback could be provided to acquireToken, triggering an NPE
- Caching improvements
    * Guest-account migration support added
    * Network I/O for performing cache migrations has been parallelized
    * Adds support for setting cache encryption keys

Known issues:
- Property `authority` of `IAuthenticationResult` is always `null` for AAD authorities

Version 0.2.2
----------------------------
- Picks up common@0.0.8
	* Bugfix: Resolves MSAL/#517
		- Fix the bug caused by fragment parameter when extracting the redirect url
	* Bugfix: Resolves COMMON/#343
		- Fix the discrepancy on "mIdentityProvider" of Account object between ADAL v1.14.1 and ADAL v1.15.1

Version 0.2.1
----------------------------
- Picks up common@0.0.7
    * Bugfix: Resolves MSAL/#420
        - Corrects an issue whereby expired access tokens can be returned from the cache
    * Bugfix: Resolves MSAL/#418
        - Adds client_id, redirect_uri to refresh token requests (previously missing, yielding inconsistent behavior depending on account type).

Version 0.2.0
----------------------------
- Cache schema has been redesigned to support migration from ADAL 1.15.2+
- SSO and user state will be lost in migration from prior MSAL versions.
- Added support for authorization via:
    * Embedded WebView
    * Device default browser (not only Chrome)
- PublicClientApplication now accepts a JSON metadata document to configure
    * client_id
    * redirect_uri
    * authorities
    * authorization_user_agent
    * http settings
        - configurable timeouts for read/connection
- API changes
    * User has been replaced by IAccount
        - getUsers() -> getAccounts()
        - getUser(String) -> getAccounts(String)
        - removeUser(User) -> removeAccount(IAccount)
        - acquireToken/acquireTokenSilent overloads now accept IAccount parameter
        - User.getName() -> IAccount.getUserName()
        - New API's: IAccount.getAccountIdentifier(), IAccount.getHomeAccountIdentifier()
    * Telemetry has been temporarily removed, and will return in a future release
    * PublicClientApplication#setComponent has been removed
    * PublicClientApplication#setValidateAuthority has been removed
        - Authorities known to developers can be supplied via PublicClientApplication
        - Authorities known to Microsoft are loaded via metadata service when acquiring tokens
    * Extra query param overloads now accept List<Pair<String, String>> instead of String
    * Illegal arguments to acquireToken or acquireTokenSilent now throw MsalArgumentException
    * PublicClientApplication#setSliceParameters has been moved to PublicClientApplicationConfiguration

Version 0.1.3
----------------------------
1. GDPR compliance to Telemetry and Logger. Link: https://github.com/AzureAD/microsoft-authentication-library-for-android/wiki/Logging
2. Fix the bug on CustomTabService checking when calling getCustomTabsServiceIsBound()
3. Update Telemetry to track telemetry Event data in a single Map instance
4. Specifies thrown Exception classes in AbstractMetadataRequestor
5. Create "no-args" constructor for GSON POJOs to prevent using "sun.misc.Unsafe"Â 
6. Specifies the default locale to UTF_8 to guarantee consistent behavior across all Android devices.
7. Use versions.gradle to aggregate versions across subproject
8. Update Gradle to 4.1
9. Update Gson to 2.8.0

Version 0.1.1
----------------------------
* This release contains the preview for Microsoft Authentication library (MSAL) for Android.
Re-tag to fix the dependencies pulling issue from jcenter.

Version 0.1.0
----------------------------
* Initial preview release for MSAL
