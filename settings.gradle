pluginManagement {
     // Note: Since our plugin references the android plugin we need to include google() and mavenCentral() here.
     repositories {
         google()
         mavenCentral()
         gradlePluginPortal()
     }
 }
include ':msal', ':common', ':keyvault', ':labapi', ':testutils', ':pop-benchmarker',
        ':package-inspector', ':msalautomationapp', ':uiautomationutilities', ':common4j',
        ':LabApiUtilities'

project(':common').projectDir = new File('common/common')
project(':keyvault').projectDir = new File('common/keyvault')
project(':labapi').projectDir = new File('common/labapi')
project(':testutils').projectDir = new File('common/testutils')
project(':uiautomationutilities').projectDir = new File('common/uiautomationutilities')
project(':common4j').projectDir = new File('common/common4j')
project(':LabApiUtilities').projectDir = new File('common/LabApiUtilities')

// test apps
include ':testapps:sample'
include ':testapps:testapp'
include ':testapps:automationapp'

def vstsUsername = System.getenv("ENV_VSTS_MVN_ANDROID_MSAL_USERNAME") != null ? System.getenv("ENV_VSTS_MVN_ANDROID_MSAL_USERNAME") : settings.ext.find('vstsUsername')
def vstsPassword = System.getenv("ENV_VSTS_MVN_ANDROID_MSAL_ACCESSTOKEN") != null ? System.getenv("ENV_VSTS_MVN_ANDROID_MSAL_ACCESSTOKEN") : settings.ext.find('vstsMavenAccessToken')

dependencyResolutionManagement {
    repositories {
        mavenLocal()
        maven {
            name "vsts-maven-adal-android"
            url "https://identitydivision.pkgs.visualstudio.com/_packaging/AndroidADAL/maven/v1"
            credentials {
                username vstsUsername
                password vstsPassword
            }
        }
    }

    versionCatalogs {
        libs {
            from("com.microsoft.identity:catalog:1.0.0-alpha01")
        }
    }
}
