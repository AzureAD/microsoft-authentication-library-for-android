# run MSAL with Broker UI automation testcases
# Variable: 'gCloudProjectId' was defined in the Variables tab
# https://dev.azure.com/IdentityDivision/Engineering/_build/index?definitionId=1742&_a=completed
name: $(Build.BuildId)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

parameters:
  - name: firebaseDeviceIdHigh
    displayName: Firebase Device Id (Api 30+)
    type: string
    default: oriole
  - name: firebaseDeviceAndroidVersionHigh
    displayName: Firebase Device Android Version (Api 30+)
    type: number
    default: 32
  - name: firebaseDeviceIdLow
    displayName: Firebase Device Id (Api 29-)
    type: string
    default: blueline
  - name: firebaseDeviceAndroidVersionLow
    displayName: Firebase Device Android Version (Api 29-)
    type: number
    default: 28
  - name: flankShards
    displayName: Max Number of Flank Shards
    type: number
    default: 2
  - name: testTargetPackages
    displayName: Packages as Test Targets
    type: string
    default: package com.microsoft.identity.client.msal.automationapp.testpass.broker, notAnnotation org.junit.Ignore, notAnnotation com.microsoft.identity.client.ui.automation.annotations.DoNotRunOnPipeline
  - name: oldBrokerHostVersion
    displayName: Old Broker host Version
    type: string
    default: '0.0.1'

variables:
  engineeringProjectId: 'fac9d424-53d2-45c0-91b5-ef6ba7a6bf26'
  azureSamplePipelineId: 1458
  brokerHostPipelineId: 1432
  msazureServiceConnection: AndroidBroker-CI
  msazureFeedName: Android-Broker
  azureSampleApk: AzureSample-local-debug.apk
  brokerHostApk: brokerHost-local-debug.apk
  oldBrokerHostApk: brokerHost-local-debug.apk
  firebaseTimeout: 45m

stages:
  # msalautomationapp
  - stage: 'msalautomationapp'
    displayName: Build MSAL Automation APKs
    jobs:
      - template: ./templates/build-msal-automation-app.yml
        parameters:
          brokerFlavor: BrokerHost
          msalFlavor: Local
          brokerSource: LocalApk
  # Brokers
  - stage: 'brokers'
    dependsOn: []    # this removes the implicit dependency on previous stage and causes this to run in parallel
    displayName: Brokers and Azure Sample APKs
    jobs:
      - job: 'download_brokers'
        displayName: Download Brokers
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: none
          - task: DownloadPipelineArtifact@2
            displayName: 'Download latest Azure Sample'
            inputs:
              buildType: 'specific'
              project: '$(engineeringProjectId)'
              definition: '$(azureSamplePipelineId)'
              artifactName: AzureSample
              itemPattern: '**/*.apk'
              targetPath: '$(Build.ArtifactStagingDirectory)/azureSample'
              buildVersionToDownload: 'latest'
          - task: DownloadPipelineArtifact@2
            displayName: 'Download Broker Host'
            inputs:
              buildType: specific
              project: '$(engineeringProjectId)'
              definition: '$(brokerHostPipelineId)'
              artifactName: BrokerHost
              itemPattern: '**/*.apk'
              targetPath: '$(Build.ArtifactStagingDirectory)/brokerHost'
          - task: UniversalPackages@0
            displayName: 'Download old brokerHost version from feed'
            inputs:
              command: 'download'
              downloadDirectory: '$(Build.ArtifactStagingDirectory)/oldBrokerHost'
              feedsToUse: 'external'
              externalFeedCredentials: '$(msazureServiceConnection)'
              feedDownloadExternal: '$(msazureFeedName)'
              packageDownloadExternal: 'broker-host'
              versionDownloadExternal: '${{ parameters.oldBrokerHostVersion }}'
          - publish: $(Build.ArtifactStagingDirectory)/azureSample
            displayName: 'Publish Azure Sample apk for later use'
            artifact: azureSample
          - publish: $(Build.ArtifactStagingDirectory)/brokerHost
            displayName: 'Publish Broker Host apk for later use'
            artifact: brokerHost
          - publish: $(Build.ArtifactStagingDirectory)/oldBrokerHost
            displayName: 'Publish Broker Host old apk for later use'
            artifact: oldBrokerHost
  # MSAL with Broker Test Plan stage (API 30+)
  - stage: 'msal_with_broker_high_api'
    dependsOn:
      - msalautomationapp
      - brokers
    displayName: Running MSAL with Broker Test UI Test Suite (API ${{ parameters.firebaseDeviceAndroidVersionHigh }})
    jobs:
      - template: ./templates/flank/run-on-firebase-with-flank.yml
        parameters:
          automationAppApkPath: "$(Pipeline.Workspace)/msalautomationapks/msalautomationapp-local-BrokerHost-debug.apk"
          automationAppTestApkPath: "$(Pipeline.Workspace)/msalautomationapks/msalautomationapp-local-BrokerHost-debug-androidTest.apk"
          testTargetPackages: ${{ parameters.testTargetPackages }}
          resultsHistoryName: "Dev MSAL with Dev BrokerHost"
          otherFiles: "/data/local/tmp/BrokerHost.apk=$(Pipeline.Workspace)/brokerHost/$(brokerHostApk),\
                  /data/local/tmp/OldBrokerHost.apk=$(Pipeline.Workspace)/oldBrokerHost/$(oldBrokerHostApk),\
                  /data/local/tmp/AzureSample.apk=$(Pipeline.Workspace)/azureSample/$(azureSampleApk)"
          resultsDir: "msal-BrokerHost-highapi-$(Build.BuildId)-$(Build.BuildNumber)"
          firebaseDeviceId: ${{ parameters.firebaseDeviceIdHigh }}
          firebaseDeviceAndroidVersion: ${{ parameters.firebaseDeviceAndroidVersionHigh }}
          testRunTitle: "Broker(MSAL) UI Automation - Build (API ${{ parameters.firebaseDeviceAndroidVersionHigh }}) # $(Build.BuildNumber)"
          apiLevelTarget: "notAnnotation com.microsoft.identity.client.ui.automation.annotations.RunOnAPI29Minus"
          flankShards: ${{ parameters.flankShards }}
  # MSAL with Broker Test Plan stage (API 29-)
  - stage: 'msal_with_broker_low_api'
    dependsOn:
      - msalautomationapp
      - brokers
    displayName: Running MSAL with Broker Test UI Test Suite (API ${{ parameters.firebaseDeviceAndroidVersionLow }})
    jobs:
      - template: ./templates/run-on-firebase.yml
        parameters:
          automationAppApkPath: "$(Pipeline.Workspace)/msalautomationapks/msalautomationapp-local-BrokerHost-debug.apk"
          automationAppTestApkPath: "$(Pipeline.Workspace)/msalautomationapks/msalautomationapp-local-BrokerHost-debug-androidTest.apk"
          testTargetPackages: ${{ parameters.testTargetPackages }}
          resultsHistoryName: "Dev MSAL with Dev BrokerHost"
          otherFiles: "/data/local/tmp/BrokerHost.apk=$(Pipeline.Workspace)/brokerHost/$(brokerHostApk),\
                  /data/local/tmp/OldBrokerHost.apk=$(Pipeline.Workspace)/oldBrokerHost/$(oldBrokerHostApk),\
                  /data/local/tmp/AzureSample.apk=$(Pipeline.Workspace)/azureSample/$(azureSampleApk)"
          resultsDir: "msal-BrokerHost-lowapi-$(Build.BuildId)-$(Build.BuildNumber)"
          firebaseDeviceId: ${{ parameters.firebaseDeviceIdLow }}
          firebaseDeviceAndroidVersion: ${{ parameters.firebaseDeviceAndroidVersionLow }}
          testRunTitle: "Broker(MSAL) UI Automation - Build (API ${{ parameters.firebaseDeviceAndroidVersionLow }}) # $(Build.BuildNumber)"
          apiLevelTarget: "annotation com.microsoft.identity.client.ui.automation.annotations.RunOnAPI29Minus"
