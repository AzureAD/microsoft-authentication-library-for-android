# 'Allow scripts to access the OAuth token' was selected in pipeline.  Add the following YAML to any steps requiring access:
#       env:
#           MY_ACCESS_TOKEN: $(System.AccessToken)
# Variable 'android:serverUrl' was defined in the Variables tab
# Variable 'ENV_VSTS_MVN_ANDROID_MSAL_USERNAME' was defined in the Variables tab
# Variable 'test_repo_branch' was defined in the Variables tab
# Variable 'test_repo_dir' was defined in the Variables tab
# Variable Group 'Android Common Variables' was defined in the Variables tab
# Cron Schedules have been converted using UTC Time Zone and may need to be updated for your location
schedules:
- cron: 0 23 * * *
  branches:
    include:
    - dev
  always: true
name: $(date:yyyyMMdd)$(rev:.r)
resources:
  repositories:
  - repository: self
    type: git
    ref: dev
  - repository: common
    type: github
    name: AzureAD/microsoft-authentication-library-common-for-android
    ref: dev
    endpoint: ANDROID_GITHUB
jobs:
- job: Phase_1
  displayName: Phase 1
  cancelTimeoutInMinutes: 1
  pool:
    name: Hosted Windows 2019 with VS2019
  steps:
  - checkout: self
    clean: true
    submodules: recursive
    persistCredentials: True
  - template: azure-pipelines/templates/steps/credscan-policheck.yml@common
    parameters:
      policheckCmdLineArgsDir: adal
  - task: TSAUpload@1
    displayName: TSA Upload
    enabled: False
    inputs:
      tsaStamp: Azure
      codeBaseName: ADALAndroid
      notificationAlias: androididentity@microsoft.com
      codeBaseAdmins: REDMOND\androididentity
      instanceUrlAzure: IDENTITYDIVISION
      projectNameIDENTITYDIVISION: IDDP
      areaPath: IDDP\DevEx-Client-SDK\Android
      iterationPath: IDDP\FY19\Q1
      uploadAPIScan: false
      uploadBinSkim: false
      uploadFortifySCA: false
      uploadFxCop: false
      uploadModernCop: false
      uploadPREfast: false
      uploadRoslyn: false
      uploadTSLint: false
  - task: PowerShell@2
    displayName: PowerShell Script
    enabled: False
    inputs:
      targetType: inline
      filePath: $(System.DefaultWorkingDirectory)
      script: >
        Write-Host "This works: $env:ENV_VSTS_MVN_ANDROID_MSAL_ACCESSTOKEN"

        Write-Host "This works: $mvnAccessToken"


        [Environment]::SetEnvironmentVariable(":ENV_VSTS_MVN_ANDROID_MSAL_ACCESSTOKEN", "$mvnAccessToken", "User")
  - template: azure-pipelines/templates/steps/automation-cert.yml@common
    parameters:
      envVstsMvnAt: ENV_VSTS_MVN_ANDROID_MSAL_ACCESSTOKEN
  - task: Gradle@2
    displayName: Snapshot version update
    inputs:
      tasks: versionSnapshot
      publishJUnitResults: false
  - task: Gradle@1
    name: Gradle1
    displayName: Assemble Snapshot
    inputs:
      tasks: clean msal:assembleSnapshot
      publishJUnitResults: false
      jdkArchitecture: x86
      sqAnalysisBreakBuildIfQualityGateFailed: false
  - task: Gradle@2
    displayName: Run Unit tests
    inputs:
      tasks: testSnapshotDebugUnitTest -Plabtest
      testResultsFiles: ' **/TEST-*.xml'
  - task: Gradle@2
    displayName: Publish
    inputs:
      tasks: msal:publish
      publishJUnitResults: false
  - task: CopyFiles@2
    name: CopyFiles1
    displayName: Copy Files to Artifact Staging Directory
    inputs:
      SourceFolder: msal\build\
      TargetFolder: $(build.artifactstagingdirectory)
  - task: PublishPipelineArtifact@1
    name: PublishPipelineArtifact1
    displayName: 'Publish Artifact: Common Release'
    inputs:
      ArtifactName: CommonRelease
      TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
  - task: ComponentGovernanceComponentDetection@0
    displayName: Component Detection
...
