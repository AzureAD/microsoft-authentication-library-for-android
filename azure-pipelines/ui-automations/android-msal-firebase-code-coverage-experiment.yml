# 'Allow scripts to access the OAuth token' was selected in pipeline.  Add the following YAML to any steps requiring access:
#       env:
#           MY_ACCESS_TOKEN: $(System.AccessToken)
# Variable 'android:serverUrl' was defined in the Variables tab
# Variable 'ENV_VSTS_MVN_ANDROIDADACCOUNTS_USERNAME' was defined in the Variables tab
# Variable 'gcloud_project_id' was defined in the Variables tab
# Variable 'mvnAccessToken' was defined in the Variables tab
# Variable 'test_repo_branch' was defined in the Variables tab
# Variable 'test_repo_dir' was defined in the Variables tab
name: $(date:yyyyMMdd)$(rev:.r)
resources:
  repositories:
  - repository: self
    type: git
    ref: dev
jobs:
- job: Phase_1
  displayName: Phase 1
  cancelTimeoutInMinutes: 1
  pool:
    name: Hosted Windows 2019 with VS2019
  steps:
  - checkout: self
    clean: true
    submodules: recursive
    persistCredentials: True
  - template: ../templates/steps/credscan-policheck.yml
    parameters:
      policheck-cmdlineargs-dir: adal
  - task: CmdLine@1
    displayName: Set MVN Access Token in Environment
    inputs:
      filename: echo
      arguments: '##vso[task.setvariable variable=ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN]$(mvnAccessToken)'
  - task: AzureKeyVault@1
    name: secret
    displayName: 'Azure Key Vault: Download Secret for Automation'
    inputs:
      ConnectedServiceName: 52f0b8f0-fbe7-4c1b-8169-25886eb6bab4
      KeyVaultName: ADALTestInfo
      SecretsFilter: AndroidAutomationRunnerAppSecret
  - task: DownloadBuildArtifacts@0
    displayName: Download Broker Host APK
    inputs:
      buildType: specific
      project: a7934fdd-dcde-4492-a406-7fad6ac00e17
      definition: 1195
      buildVersionToDownload: latestFromBranch
      branchName: refs/heads/dev
      artifactName: BrokerHostDebug
  - task: DownloadSecureFile@1
    name: azureSampleApk
    displayName: Download Azure Sample Debug APK
    inputs:
      secureFile: 960465ec-c668-4926-a723-32c6c952d643
      retryCount: 5
  - task: DownloadSecureFile@1
    name: firebaseKey
    displayName: Download Firebase Service Account Key File
    inputs:
      secureFile: b4ed35b0-bb20-4830-8a21-2297e3de7fa1
      retryCount: 5
  - task: PowerShell@2
    displayName: Uninstall gcloud
    inputs:
      targetType: inline
      script: >+
        gcloud -v


        $sdkRoot = gcloud info --format='value(installation.sdk_root)'

        $sdkConfig = gcloud info --format='value(config.paths.global_config_dir)'


        $sdkRoot

        $sdkConfig


        Remove-Item $sdkRoot -Recurse -Force

        Remove-Item $sdkConfig -Recurse -Force


  - task: PowerShell@2
    displayName: Install Google Cloud
    inputs:
      targetType: inline
      script: >-
        Write-Output "Downloading gcloud sdk with version 320.0.0"


        $downloadLink = "https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-320.0.0-windows-x86-bundled-python.zip"


        Write-Output "Using download link: $downloadLink"


        $dest = "$env:Temp\GoogleCloudSDKInstaller.zip"

        (New-Object Net.WebClient).DownloadFile($downloadLink, $dest)


        Write-Output "Extracting gcloud archive on machine...."


        Expand-Archive -Path $dest -DestinationPath .\gcloud-extracted


        Write-Output "Finished extracting gcloud archive on machine...."

        Write-Output "Install gcloud sdk on machine in quiet mode...."

        .\gcloud-extracted\google-cloud-sdk\install.bat -q


        $baseDir = pwd

        $gcloudDir = "$baseDir\gcloud-extracted\google-cloud-sdk\bin"

        Write-Output "gcloud bin dir: $gcloudDir"

        Write-Output "path: $env:path"

        Write-Output "Setting gcloud to path"

        Write-Host "##vso[task.setvariable variable=PATH;]${env:PATH};$gcloudDir";
  - task: PowerShell@2
    displayName: Google Cloud Init
    inputs:
      targetType: inline
      script: >-
        Write-Output "path: $env:path"

        gcloud auth activate-service-account --key-file $(firebaseKey.secureFilePath)

        gcloud init

        gcloud version

        gcloud config set project $(gcloud_project_id)

        gcloud firebase test android models list
  - task: Gradle@1
    name: Gradle1
    displayName: Assemble MSAL Automation App
    inputs:
      tasks: clean msalautomationapp:assembleLocalBrokerHost -PlabSecret=$(AndroidAutomationRunnerAppSecret) -PpreferPreInstalledApks
      publishJUnitResults: false
      jdkArchitecture: x86
      sqAnalysisBreakBuildIfQualityGateFailed: false
  - task: Gradle@1
    displayName: Assemble MSAL Automation App Instrumented Tests
    inputs:
      tasks: msalautomationapp:assembleLocalBrokerHostDebugAndroidTest -PlabSecret=$(AndroidAutomationRunnerAppSecret) -PpreferPreInstalledApks
      publishJUnitResults: false
      jdkArchitecture: x86
      sqAnalysisBreakBuildIfQualityGateFailed: false
  - task: PowerShell@2
    displayName: Run UI Automation on Firebase
    inputs:
      targetType: inline
      script: >-
        $baseApkPath = "$(Build.SourcesDirectory)\msalautomationapp\build\outputs\apk"

        $appApk = "$baseApkPath\localBrokerHost\debug\msalautomationapp-local-BrokerHost-debug.apk"

        $testApk = "$baseApkPath\androidTest\localBrokerHost\debug\msalautomationapp-local-BrokerHost-debug-androidTest.apk"

        $brokerHostApk = "$(System.ArtifactsDirectory)\BrokerHostDebug\brokerHost-local-debug.apk"

        $azureSampleApk = "$(azureSampleApk.secureFilePath)"

        $appApk

        $testApk

        $brokerHostApk

        $azureSampleApk

        gcloud firebase test android run --type instrumentation --app $appApk --test $testApk --device model=flame,version=29 --timeout 45m --additional-apks $brokerHostApk,$azureSampleApk --results-dir msal-BrokerHost-$(Build.BuildId)-$(Build.BuildNumber) --directories-to-pull "/sdcard" --environment-variables clearPackageData=true,coverage=true,coverageFilePath=/sdcard/ --use-orchestrator
  - task: PowerShell@2
    displayName: Download Test Result File
    condition: succeededOrFailed()
    inputs:
      targetType: inline
      script: gsutil cp gs://test-lab-ffz6x9pu2y62a-is0rq7a7rwdhi/msal-BrokerHost-$(Build.BuildId)-$(Build.BuildNumber)/flame-29-en-portrait/test_result_1.xml $(Build.SourcesDirectory)
  - task: PublishTestResults@2
    displayName: Publish Test Results to ADO
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '*test_result*.xml'
      searchFolder: $(Build.SourcesDirectory)
      testRunTitle: 'MSAL UI Automation - Build # $(Build.BuildNumber)'
  - task: ComponentGovernanceComponentDetection@0
    displayName: Component Detection
...
